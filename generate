#!/bin/bash

set -e

sudo apt install python
sudo pip3 install "pillow!=8.3.0" tensorflow-cpu==2.6.5 matplotlib numpy tensorflow_hub pyyaml 

export INPUT_DATA_PATH=${INPUT_DATA_PATH:="$(pwd)/data-repo"}
export OUTPUT_DATA_PATH=${OUTPUT_DATA_PATH:="$(pwd)/pages-repo"}
export CODE_REPO_PATH=${CODE_REPO_PATH:="$(pwd)/code-repo"}

# Data processing
cd $CODE_REPO_PATH/etl
curl -L https://yt-dl.org/downloads/latest/youtube-dl -o youtube-dl
chmod +x youtube-dl
npm install
npm run lets-do-this
cd ../..

# Copy config file from data repo to viewer
# cp -u data-repo/config.yml $CODE_REPO_PATH || true

export URL=$(yq e .url data-repo/config.yml)
export BASE_PATH=$(yq e .basePath data-repo/config.yml)
export SITE_TITLE=$(yq e .siteTitle data-repo/config.yml)
export SITE_DESCRIPTION=$(yq e .siteDescription data-repo/config.yml)
export DISTANCE_THRESHOLD=$(yq e .distanceThreshold data-repo/config.yml)
export TIME_THRESHOLD=$(yq e .timeThreshold data-repo/config.yml)
export ENABLE_TAGGER=$(yq e .enableTagger data-repo/config.yml)
export AUTO_TAGS=$(yq e .autoTags data-repo/config.yml)

echo "Configuration:"
echo "INPUT_DATA_PATH: $INPUT_DATA_PATH"
echo "OUTPUT_DATA_PATH: $OUTPUT_DATA_PATH"
echo "CODE_REPO_PATH: $CODE_REPO_PATH"
echo "URL: $URL"
echo "BASE_PATH: $BASE_PATH"
echo "SITE_TITLE: $SITE_TITLE"
echo "SITE_DESCRIPTION: $SITE_DESCRIPTION"
echo "DISTANCE_THRESHOLD: $DISTANCE_THRESHOLD"
echo "TIME_THRESHOLD: $TIME_THRESHOLD"
echo "ENABLE_TAGGER: $ENABLE_TAGGER"
echo "AUTO_TAGS: $AUTO_TAGS"

genereteStaticPages () {
    echo ""
    echo "Regenerate static pages"

    rm -R $CODE_REPO_PATH/viewer-2/public/*
    cp -R $OUTPUT_DATA_PATH/data $CODE_REPO_PATH/viewer-2/public
    cp -R $OUTPUT_DATA_PATH/images $CODE_REPO_PATH/viewer-2/public
    cp -R $OUTPUT_DATA_PATH/index.json $CODE_REPO_PATH/viewer-2/public

    # Compile code of site/viewer
    cd $CODE_REPO_PATH/viewer-2
    npm install --force
    npm run build
    cd ../..

    cp -R $CODE_REPO_PATH/viewer-2/out/* $OUTPUT_DATA_PATH
    touch $OUTPUT_DATA_PATH/_next/.nojekyll
}

# Generate static pages with default setting for cretion of previews
genereteStaticPages

# Run site in dev mode
#cd $CODE_REPO_PATH/viewer-2
#npm run dev &
#cd ../..
npx http-server $CODE_REPO_PATH/viewer-2/out -p 3000 &

# Make preview/thumbnail for every trip
cd $CODE_REPO_PATH/previewer
npm install
npm run lets-do-this
cd ../..

# Tag inference using python and tensorflow
if [ -z "$ENABLE_TAGGER" ]; then
    cd $CODE_REPO_PATH/tagger
    python3 ./tagger.py
    cd ../..
fi

# Data processing (ELT) again since out tags were changed
cd $CODE_REPO_PATH/etl
npm run lets-do-this
cd ../..

cat $CODE_REPO_PATH/viewer-2/next.config.template.js | envsubst > $CODE_REPO_PATH/viewer-2/next.config.js

genereteStaticPages
