#!/bin/bash

set -e

sudo apt install python
sudo pip3 install "pillow!=8.3.0" tensorflow==2.4.2 matplotlib numpy tensorflow_hub pyyaml 

export INPUT_DATA_PATH="$(pwd)/data-repo"
export OUTPUT_DATA_PATH="$(pwd)/pages-repo"

# Data processing
cd code-repo/etl
curl -L https://yt-dl.org/downloads/latest/youtube-dl -o youtube-dl
chmod +x youtube-dl
npm install
npm run lets-do-this
cd ../..

# Copy config file from data repo to viewer
# cp -u data-repo/config.yml code-repo || true

echo "next.config.js before, start"
cat code-repo/viewer-2/next.config.js
echo "next.config.js before, end"

export BASE_PATH=$(yq e .basePath data-repo/config.yml)
export SITE_TITLE=$(yq e .siteTitle data-repo/config.yml)
export SITE_DESCRIPTION=$(yq e .siteDescription data-repo/config.yml)

cat code-repo/viewer-2/next.config.js | envsubst > code-repo/viewer-2/next.config.js

echo $BASE_PATH
echo $SITE_TITLE
echo $SITE_DESCRIPTION

echo "next.config.js after, start"
cat code-repo/viewer-2/next.config.js
echo "next.config.js after, end"

genereteStaticPages () {
    echo ""
    echo "Regenerate static pages"

    rm -R code-repo/viewer-2/public/*
    cp -R $OUTPUT_DATA_PATH/data code-repo/viewer-2/public
    cp -R $OUTPUT_DATA_PATH/images code-repo/viewer-2/images
    cp -R $OUTPUT_DATA_PATH/index.json code-repo/viewer-2/public

    # Compile code of site/viewer
    cd code-repo/viewer-2
    npm install --force
    npm run build
    cd ../..

    cp -R code-repo/viewer-2/out/* $OUTPUT_DATA_PATH
    touch $OUTPUT_DATA_PATH/_next/.nojekyll
}

genereteStaticPages

# Run site in dev mode
cd code-repo/viewer-2
npm run dev &
#http-server code-repo/viewer-2/out -p 8080 &
cd ../..

# Make preview/thumbnail for every trip
cd code-repo/previewer
npm install
npm run lets-do-this
cd ../..

# Tag inference using python and tensorflow
cd code-repo/tagger
python3 ./tagger.py
cd ../..

# Data processing (ELT) again since out tags were changed
cd code-repo/etl
npm run lets-do-this
cd ../..

genereteStaticPages